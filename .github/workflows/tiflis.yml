name: tiflis

on:
  push:
    branches:
      - tiflis-master
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
  repository_dispatch:
    types: [test-with-secrets-command]

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # checkout all commits, as the build result depends on `git describe` equivalent
          ref: |
            ${{ github.event_name == 'repository_dispatch' &&
                github.event.client_payload.pull_request.head.sha == github.event.client_payload.slash_command.args.named.sha &&
                format('refs/pull/{0}/head', github.event.client_payload.pull_request.number) || '' }}
      - uses: ./.github/actions/setup
        timeout-minutes: 10
        with:
          cache: 'restore'
          cleanup-node: true
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $MAVEN clean install ${MAVEN_FAST_INSTALL} -pl '!:trino-docs,!:trino-server-rpm'
      - name: Test Server RPM
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $MAVEN verify -B --strict-checksums -P ci -pl :trino-server-rpm
      - name: Test JDBC shading
        # Run only integration tests to verify JDBC driver shading
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          $MAVEN failsafe:integration-test failsafe:verify -B --strict-checksums -P ci -pl :trino-jdbc
      - name: Clean Maven Output
        run: $MAVEN clean -pl '!:trino-server,!:trino-cli'
      - uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3
        with:
          platforms: arm64,ppc64le
      - uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5.0.0
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and Test Docker Image
        run: core/docker/build.sh -x r ${{ steps.meta.outputs.tags }}
      - name: Publish Tiflis Docker Image
        run: core/docker/push.sh